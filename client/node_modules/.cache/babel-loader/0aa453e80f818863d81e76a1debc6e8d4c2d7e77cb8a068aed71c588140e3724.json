{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ethri\\\\WebstormProjects\\\\dealify\\\\client\\\\src\\\\pages\\\\LoginPage\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Login from '@react-login-page/page3';\nimport defaultBannerImage from '@react-login-page/page3/bg.jpeg';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate(); // Hook `useNavigate` do nawigacji\n\n  const handleLogin = async () => {\n    try {\n      // Wywołanie API logowania\n      console.log(email);\n      console.log(password);\n      const response = await axios.post('http://localhost:5000/api/login', {\n        email,\n        password\n      });\n      console.log(response);\n      // Pobranie tokenu z odpowiedzi\n      const {\n        token\n      } = response.data;\n\n      // Zapisanie tokenu w localStorage\n      localStorage.setItem('token', token);\n\n      // Przekierowanie na stronę Dashboard\n      navigate(\"DashboardPage\");\n    } catch (err) {\n      // Obsługa błędów logowania\n      setError('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Login, {\n    style: {\n      height: 900\n    },\n    children: [/*#__PURE__*/_jsxDEV(Login.Banner, {\n      style: {\n        backgroundImage: `url(${defaultBannerImage})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Login.Email, {\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      placeholder: \"Enter your email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Login.Password, {\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Enter your password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Login.Submit, {\n      button: true,\n      onClick: handleLogin,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginPage, \"04s5JR+/x8JdloJ2sm+29L/IvyI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Login","defaultBannerImage","useNavigate","axios","jsxDEV","_jsxDEV","LoginPage","_s","email","setEmail","password","setPassword","error","setError","navigate","handleLogin","console","log","response","post","token","data","localStorage","setItem","err","style","height","children","Banner","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","Email","value","onChange","e","target","placeholder","Password","color","marginBottom","Submit","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ethri/WebstormProjects/dealify/client/src/pages/LoginPage/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Login from '@react-login-page/page3';\r\nimport defaultBannerImage from '@react-login-page/page3/bg.jpeg';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nconst LoginPage = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const navigate = useNavigate(); // Hook `useNavigate` do nawigacji\r\n\r\n    const handleLogin = async () => {\r\n        try {\r\n            // Wywołanie API logowania\r\n            console.log(email);\r\n            console.log(password);\r\n            const response = await axios.post('http://localhost:5000/api/login', { email, password });\r\n            console.log(response);\r\n            // Pobranie tokenu z odpowiedzi\r\n            const { token } = response.data;\r\n\r\n            // Zapisanie tokenu w localStorage\r\n            localStorage.setItem('token', token);\r\n\r\n            // Przekierowanie na stronę Dashboard\r\n            navigate(\"DashboardPage\");\r\n        } catch (err) {\r\n            // Obsługa błędów logowania\r\n            setError('Invalid email or password');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Login style={{ height: 900 }}>\r\n            <Login.Banner style={{ backgroundImage: `url(${defaultBannerImage})` }} />\r\n\r\n            {/* Obsługa wprowadzania danych użytkownika */}\r\n            <Login.Email\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n                placeholder=\"Enter your email\"\r\n            />\r\n            <Login.Password\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                placeholder=\"Enter your password\"\r\n            />\r\n\r\n            {/* Obsługa błędów */}\r\n            {error && <div style={{ color: 'red', marginBottom: '10px' }}>{error}</div>}\r\n\r\n            {/* Obsługa przycisku logowania */}\r\n            <Login.Submit button onClick={handleLogin}>\r\n                Log in\r\n            </Login.Submit>\r\n        </Login>\r\n    );\r\n};\r\n\r\nexport default LoginPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}